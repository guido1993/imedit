<UserControl x:Name="fullEditorControl"
    x:Class="Imedit.Views.Panels.FullEditorPane"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:colorPicker="using:ColorPicker"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
             mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Width="300">
    <UserControl.Resources>
        <DataTemplate x:Key="Cross">
			<Path Width="10" Height="10"
				Data="M0,0 L 1,1 M 1,0 L 0,1" 
				Stroke="Black"
				StrokeThickness="2"
				Stretch="Fill">
				<!--Apply offset to center on the center of the cross-->
				<Path.RenderTransform>
					<TranslateTransform X="-5" Y="-5" />
				</Path.RenderTransform>
			</Path>
		</DataTemplate>
    </UserControl.Resources>
    <Border BorderThickness="2,2,0,0" BorderBrush="#FF696969">
        <Grid Background="{Binding ElementName=fullEditorControl, Path=Background}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Background="#FF696969"
                  Height="48"
                  VerticalAlignment="Top"
                  Grid.Row="0">
            
                <TextBlock VerticalAlignment="Center"
                           Text="{Binding FullEditorTitle}"
                           Margin="12,0,0,0"
                           Foreground="White"/>
            </Grid>
        
            <Border Height="2"
                    Grid.Row="2"
                    Background="#FF696969" />
        
            <colorPicker:ColorPicker Visibility="{Binding IsColorPickerEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     SelectedColor="{Binding Color, Mode=TwoWay}"
                                     x:Name="ColorPicker"
                                     Grid.Row="1">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="SelectedColorChanged">
                        <core:InvokeCommandAction Command="{Binding SelectedColorChangeCommand}" 
                                                  CommandParameter="{Binding ElementName=ColorPicker, Path=SelectedColor}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </colorPicker:ColorPicker>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                
                <Image Visibility="{Binding IsLogoVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Source="/Assets/Icon/LogoImedit.png"
                       MaxWidth="150"
                       Margin="20"
                       Stretch="Uniform" />
                
                <TextBlock Visibility="{Binding IsWelcomeEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" 
                           Text="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='WelcomeMessage1'}" 
                           TextWrapping="WrapWholeWords" 
                           FontSize="18" 
                           HorizontalAlignment="Center"
                           Grid.Row="1" />
                
                <TextBlock Visibility="{Binding IsWelcomeEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" 
                           Text="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='WelcomeMessage2'}" 
                           TextWrapping="WrapWholeWords" 
                           Margin="0,10,0,20" 
                           FontSize="18" 
                           HorizontalAlignment="Center"
                           Grid.Row="2" />
            </Grid>
            
            <ListView x:Name="FilterList"
                      ItemsSource="{Binding Filters}"
                      IsItemClickEnabled="True"
                      SelectionMode="None"
                      Grid.Row="1"
                      Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <core:InvokeCommandAction Command="{Binding FilterChangedCommand}" 
                                                  InputConverter="{StaticResource ItemClickEventArgsConverter}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </ListView>

            <Grid Visibility="{Binding IsFloodFillEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Slider Minimum="0" 
                        Maximum="100"
                        StepFrequency="1" 
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='SimilarityLevel'}"
                        Value="{Binding FloodFillAccuracy, Mode=TwoWay}"
                        Grid.Row="0"/>
            </Grid>

                <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='GrayScale'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
            
                <Slider Minimum="0" 
                        Maximum="1"
                        StepFrequency="0.01" 
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='GrayScaleLevel'}" 
                        Value="0.5" 
                        x:Name="GrayScaleSlider"
                        Grid.Row="0"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ValueChanged">
                            <core:InvokeCommandAction Command="{Binding GrayScaleChangeCommand}" 
                                                      CommandParameter="{Binding ElementName=GrayScaleSlider, Path=Value}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Slider>
                
                    <Button x:Uid="FilterConfirmation"
                            HorizontalAlignment="Stretch"
                            Grid.Row="1"
                            Margin="0,10,0,0" 
                            Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding GrayApplyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
                    
                <Image Source="{Binding GrayScalePreviewImage}"
                       Grid.Row="2" 
                       Margin="0,12,0,0"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"/>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Contrast'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Slider Minimum="-255" 
                        Maximum="+255"
                        StepFrequency="1" 
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='ContrastLevel'}" 
                        Value="{Binding ContrastLevel, Mode=TwoWay}"
                        Grid.Row="0"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <Button x:Uid="FilterConfirmation"
                        HorizontalAlignment="Stretch"
                        Grid.Row="1"
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding ContrastApplyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
                
                <Image Source="{Binding ContrastPreviewImage}" 
                       Grid.Row="2" 
                       Margin="0,12,0,0"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"/>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Gamma'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Slider Minimum="0" 
                        Maximum="+5"
                        StepFrequency="0.01" 
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='GammaLevel'}" 
                        Value="{Binding GammaLevel, Mode=TwoWay}"
                        Grid.Row="0"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <Button x:Uid="FilterConfirmation" 
                        HorizontalAlignment="Stretch" 
                        Grid.Row="1" 
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding GammaApplyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
                
                <Image Source="{Binding GammaPreviewImage}"
                       Grid.Row="2" 
                       Margin="0,12,0,0"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"/>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Darken'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Slider Minimum="0" 
                        Maximum="1"
                        StepFrequency="0.01" 
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='DarkenLevel'}" 
                        Value="{Binding DarkenLevel, Mode=TwoWay}"
                        Grid.Row="0"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <Button x:Uid="FilterConfirmation" 
                        HorizontalAlignment="Stretch" 
                        Grid.Row="1"
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding DarkenApplyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
                
                <Image Source="{Binding DarkenPreviewImage}" 
                       Grid.Row="2" 
                       Margin="0,12,0,0"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"/>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Invert'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button x:Uid="FilterConfirmation" 
                        HorizontalAlignment="Stretch" 
                        Grid.Row="0" 
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding InvertApplyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Rotate'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Slider Minimum="0" 
                        Maximum="360"
                        StepFrequency="{Binding StepFrequencyValue, Mode=TwoWay}" 
                        x:Uid="RotationFilter" 
                        Value="0" 
                        x:Name="RotateSlider"
                        Grid.Row="0"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ValueChanged">
                            <core:InvokeCommandAction Command="{Binding RotationChangeCommand}" 
                                                      CommandParameter="{Binding ElementName=RotateSlider, Path=Value}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Slider>

                <CheckBox Grid.Row="1" 
                          Content="Free rotation" 
                          IsChecked="{Binding IsFreeRotationEnabled, Mode=TwoWay}" 
                          HorizontalAlignment="Left"
                          Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{Binding FreeRotationCommand}"/>
                        </core:EventTriggerBehavior>
                        <core:EventTriggerBehavior EventName="Unchecked">
                            <core:InvokeCommandAction Command="{Binding FreeRotationCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </CheckBox>

                <Button Grid.Row="2" 
                        x:Uid="FilterConfirmation"
                        HorizontalAlignment="Stretch" 
                        Margin="0,10,0,0"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding RotationApplyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Flip'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Button Grid.Row="0" 
                        x:Uid="FlipHorizontally" 
                        HorizontalAlignment="Stretch"
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding FlipHorizontallyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
                
                <Button Grid.Row="1" 
                        x:Uid="FlipVertically" 
                        HorizontalAlignment="Stretch"
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding FlipVerticallyCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>

            <Grid Visibility="{Binding SelectedFilter, Converter={StaticResource FilterToVisibilityConverter}, ConverterParameter='Lighten'}"
                  Grid.Row="3"
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <Slider Minimum="0" 
                        Maximum="1"
                        StepFrequency="0.01" 
                        x:Uid="LightenSlider" 
                        Value="{Binding LightenScaleValue, Mode=TwoWay}" 
                        x:Name="LightenSlider"
                        Grid.Row="0"
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='LightenLevel'}"
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ValueChanged">
                            <core:InvokeCommandAction Command="{Binding }" 
                                                      CommandParameter="{Binding ElementName=LightenSlider, Path=Value}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Slider>
                
                <Button Grid.Row="1"
                        x:Uid="ApplyLightScale" 
                        HorizontalAlignment="Stretch"
                        Margin="0,10,0,0" 
                        Visibility="{Binding ShowFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding ApplyLightScaleCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
                
                <Image Source="{Binding LightenScalePreviewImage}" 
                       Grid.Row="2"
                       Margin="0,12,0,0"
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"/>
            </Grid>

            <Grid Grid.Row ="3" Visibility="{Binding IsInkCanvasEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="12">
                <Slider Minimum="2" 
                        Maximum="50"
                        TickFrequency="1" 
                        Header="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='PenSize'}"
                        x:Name="StrokeSlider"
                        Value="{Binding StrokeSize, Mode=TwoWay}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ValueChanged">
                            <core:InvokeCommandAction Command="{Binding SelectedStrokeSizeChangedCommand}" 
                                                      CommandParameter="{Binding ElementName=StrokeSlider, Path=Value}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Slider>
            </Grid>
        
            <Grid Grid.Row="3" 
                  Visibility="{Binding SelectionEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" 
                  Margin="12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <ComboBox x:Name="SelectionType" 
                          Grid.Row="0" 
                          HorizontalAlignment="Stretch"
                          PlaceholderText="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='SelectionShape1'}">
                    
                    <ComboBoxItem Content="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='SelectionShape1'}" />
                    <ComboBoxItem Content="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='SelectionShape2'}" />
                    
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:InvokeCommandAction Command="{Binding ShapeSelectionCommand}"
								      CommandParameter="{Binding ElementName=SelectionType, Path=SelectedItem}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ComboBox>

                <CheckBox Grid.Row="1"
                          Content="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='SelectionFill'}" 
                          IsChecked="{Binding FillChecked, Mode=TwoWay}"/>

                <Button Grid.Row="2" 
                        x:Uid="FillButton" 
                        HorizontalAlignment="Stretch" 
                        Margin="0,10,0,0">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding FillSelection}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>

            <Grid Grid.Row="3" 
                  Visibility="{Binding IsTextPanelEnabled, Converter={StaticResource BooleanToVisibilityConverter}}" 
                  Margin="12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                
                <TextBlock Text="Font Size" 
                           Grid.Row="0" 
                           Grid.Column="0"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
                
                <TextBlock Text="Font" 
                           Grid.Row="1" 
                           Grid.Column="0"
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
                
                <TextBlock Text="Bold" 
                           Grid.Row="2" 
                           Grid.Column="0" 
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                
                <TextBlock Text="Italic" 
                           Grid.Row="3"
                           Grid.Column="0" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>

                <Slider x:Name="TextSizeSlider"
                        Grid.Row="0" 
                        Grid.Column="1" 
                        HorizontalAlignment="Stretch" 
                        Value="{Binding TextSize, Mode=TwoWay}" 
                        Minimum="2" 
                        Maximum="50" 
                        StepFrequency="1">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ValueChanged">
                            <core:InvokeCommandAction Command="{Binding ChangedTextSizeCommand}" 
								      CommandParameter="{Binding ElementName=TextSizeSlider, Path=Value}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Slider>
                
                <ComboBox x:Name="FontType" Grid.Row="1" 
                          Grid.Column="1" 
                          HorizontalAlignment="Stretch"
                          PlaceholderText="Segue UI Symbol">
                    
                    <ComboBoxItem FontFamily="Segoe UI Symbol"
                                  Content="Segoe UI Symbol"/>
                    
                    <ComboBoxItem FontFamily="Verdana" 
                                  Content="Verdana"/>
                    
                    <ComboBoxItem FontFamily="Comic Sans MS" 
                                  Content="Comic Sans MS"/>
                    
                    <ComboBoxItem FontFamily="Impact" 
                                  Content="Impact"/>
                    
                    <ComboBoxItem FontFamily="Calibri" 
                                  Content="Calibri"/>
                    
                    <ComboBoxItem FontFamily="Century Gothic" 
                                  Content="Century Gothic"/>
                    
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:InvokeCommandAction Command="{Binding ChangedFontCommand}" 
								      CommandParameter="{Binding ElementName=FontType, Path=SelectedItem}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ComboBox>
                
                <ToggleButton x:Name="TextBold" 
                              Grid.Row="2" 
                              Grid.Column="1" 
                              IsChecked="{Binding TextIsBold, Mode=TwoWay}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{Binding TextIsBoldCommand}" 
								      CommandParameter="{Binding ElementName=TextBold, Path=IsChecked}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ToggleButton>
                
                <ToggleButton x:Name="TextItalic"
                              Grid.Row="3" 
                              Grid.Column="1" 
                              IsChecked="{Binding TextIsItalic, Mode=TwoWay}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Checked">
                            <core:InvokeCommandAction Command="{Binding TextIsItalicCommand}" 
								      CommandParameter="{Binding ElementName=TextItalic, Path=IsChecked}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ToggleButton>
                
                <Button Content="{Binding Converter={StaticResource TranslatorConverter}, ConverterParameter='ConfirmAddText'}" 
                        Grid.Row="4" 
                        Grid.ColumnSpan="2"
                        HorizontalAlignment="Stretch">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding CreateNewTextCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>
        </Grid>
    </Border>
</UserControl>
